name: C/C++ CI

on:
  push:
    tags:
    - v*.*
  pull_request:
    branches:
    - master

env:
  LSL_URL: 'https://github.com/sccn/liblsl/releases/download'
  LSL_RELEASE_PREFIX: 'v'
  LSL_RELEASE: '1.15.2'
  LSL_RELEASE_SUFFIX: ''
  XDF_URL: 'https://github.com/xdf-modules/libxdf/releases/download'
  XDF_RELEASE_PREFIX: 'v'
  XDF_RELEASE: '0.99.8'
  XDF_RELEASE_SUFFIX: ''

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-20.04
        - windows-latest
        - macOS-latest
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - name: CMake version
      run: cmake --version

    - name: Install liblsl, libxdf, and Qt (Ubuntu)
      if: matrix.os == 'ubuntu-20.04'
      run: |
           echo ${{ github.ref }}
           sudo apt-get update --fix-missing  # Needed for libpulse on azure mirror.
           sudo apt install -y libpugixml1v5 qtbase5-dev
           curl -L ${XDF_URL}/${XDF_RELEASE_PREFIX}${XDF_RELEASE}${XDF_RELEASE_SUFFIX}/libxdf-${XDF_RELEASE}-Linux.deb -o libxdf.deb
           sudo dpkg -i libxdf.deb
           curl -L ${LSL_URL}/${LSL_RELEASE_PREFIX}${LSL_RELEASE}${LSL_RELEASE_SUFFIX}/liblsl-${LSL_RELEASE}-focal_amd64.deb -o liblsl.deb
           sudo dpkg -i liblsl.deb

    - name: Install liblsl and libxdf (Windows 64)
      if: matrix.os == 'windows-latest'
      run: |
           Invoke-WebRequest -Uri $Env:LSL_URL/$Env:LSL_RELEASE_PREFIX$Env:LSL_RELEASE$Env:LSL_RELEASE_SUFFIX/liblsl-$Env:LSL_RELEASE-Win_amd64.zip -o liblsl.7z
           7z x liblsl.7z -oLSL
           Invoke-WebRequest -Uri $Env:XDF_URL/$Env:XDF_RELEASE_PREFIX$Env:XDF_RELEASE$Env:XDF_RELEASE_SUFFIX/libxdf-$Env:XDF_RELEASE-win64.zip -o libxdf.7z
           7z x libxdf.7z -oXDF

    - name: Install liblsl, libxdf (MacOS)
      if: matrix.os == 'macOS-latest'
      run: |
           curl -L ${LSL_URL}/${LSL_RELEASE_PREFIX}${LSL_RELEASE}${LSL_RELEASE_SUFFIX}/liblsl-${LSL_RELEASE}-OSX_amd64.tar.bz2 -o liblsl.tar.bz2
           mkdir LSL
           tar -xvf liblsl.tar.bz2 -C LSL
           curl -L ${XDF_URL}/${XDF_RELEASE_PREFIX}${XDF_RELEASE}${XDF_RELEASE_SUFFIX}/libxdf-${XDF_RELEASE}-Darwin.tar.bz2 -o libxdf.tar.bz2
           mkdir XDF
           tar -xvf libxdf.tar.bz2 -C XDF

    - name: Install Qt (Windows and MacOS)
      if: matrix.os == 'windows-latest' || matrix.os == 'macOS-latest'
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.2

    - name: Configure CMake
      shell: bash
      run: |
           cmake -S . -B build -DLSL_INSTALL_ROOT=$PWD/LSL/ -DXDF_INSTALL_ROOT=$PWD/XDF/ -DCMAKE_INSTALL_PREFIX=${PWD}/build/install -DCPACK_PACKAGE_DIRECTORY=${PWD}/build/package

    - name: Make
      run: cmake --build build --config Release -j

    - name: Install
      run: cmake --build build --config Release -j --target install

    - name: Package
      run: cmake --build build --config Release -j --target package
      
    - name: Upload Packages
      uses: actions/upload-artifact@v2
      with:
        name: pkg-${{ matrix.os }}
        path: |
            build/package/*.deb
            build/package/*.tar.bz2
            build/package/*.zip

  release:
    needs: build
    runs-on: ubuntu-20.04
    steps:
    
    - name: Download Packages
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/download-artifact@v2

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # tag_name: ${{ github.ref }}  # ${{ github.ref }} is default
        name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        # body_path: CHANGELOG.txt
        files: 'pkg-*/*'
